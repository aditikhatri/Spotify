{"version":3,"sources":["StateProvider.js","Footer.js","SidebarOption.js","spotify.js","Sidebar.js","Header.js","SongRow.js","Body.js","Player.js","Login.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Footer","className","src","alt","fontSize","Grid","container","spacing","item","xs","Slider","aria-labelledby","SidebarOption","option","Icon","accessUrl","join","Sidebar","playlists","console","log","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","placeholder","type","Avatar","SongRow","track","playSong","onClick","id","album","images","url","artists","artist","Body","spotify","discover_weekly","dispatch","play","uris","then","res","getMyCurrentPlayingTrack","r","playing","description","context_uri","tracks","Player","Login","href","s","SpotifyWebApi","App","token","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getPlaylist","response","getMyTopArtists","top_artists","getMe","user","getUserPlaylists","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f568a492.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","// import React, { useEffect, useState } from \"react\";\r\n// import { useStateValue } from \"./StateProvider\";\r\n// import PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\n// import SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\n// import SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\n// import ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\n// import RepeatIcon from \"@material-ui/icons/Repeat\";\r\n// import VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\n// import PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\n// import PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\n// import \"./Footer.css\";\r\n// import { Grid, Slider } from \"@material-ui/core\";\r\n\r\n// function Footer({ spotify }) {\r\n//   const [{ token, item, playing }, dispatch] = useStateValue();\r\n\r\n//   useEffect(() => {\r\n//     spotify.getMyCurrentPlaybackState().then((r) => {\r\n//       console.log(r);\r\n\r\n//       dispatch({\r\n//         type: \"SET_PLAYING\",\r\n//         playing: r.is_playing,\r\n//       });\r\n\r\n//       dispatch({\r\n//         type: \"SET_ITEM\",\r\n//         item: r.item,\r\n//       });\r\n//     });\r\n//   }, [spotify]);\r\n\r\n//   const handlePlayPause = () => {\r\n//     if (playing) {\r\n//       spotify.pause();\r\n//       dispatch({\r\n//         type: \"SET_PLAYING\",\r\n//         playing: false,\r\n//       });\r\n//     } else {\r\n//       spotify.play();\r\n//       dispatch({\r\n//         type: \"SET_PLAYING\",\r\n//         playing: true,\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   const skipNext = () => {\r\n//     spotify.skipToNext();\r\n//     spotify.getMyCurrentPlayingTrack().then((r) => {\r\n//       dispatch({\r\n//         type: \"SET_ITEM\",\r\n//         item: r.item,\r\n//       });\r\n//       dispatch({\r\n//         type: \"SET_PLAYING\",\r\n//         playing: true,\r\n//       });\r\n//     });\r\n//   };\r\n\r\n//   const skipPrevious = () => {\r\n//     spotify.skipToPrevious();\r\n//     spotify.getMyCurrentPlayingTrack().then((r) => {\r\n//       dispatch({\r\n//         type: \"SET_ITEM\",\r\n//         item: r.item,\r\n//       });\r\n//       dispatch({\r\n//         type: \"SET_PLAYING\",\r\n//         playing: true,\r\n//       });\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"footer\">\r\n//       <div className=\"footer__left\">\r\n//         <img\r\n//           className=\"footer__albumLogo\"\r\n//           src={item?.album.images[0].url}\r\n//           alt={item?.name}\r\n//         />\r\n//         {item ? (\r\n//           <div className=\"footer__songInfo\">\r\n//             <h4>{item.name}</h4>\r\n//             <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\r\n//           </div>\r\n//         ) : (\r\n//           <div className=\"footer__songInfo\">\r\n//             <h4>No song is playing</h4>\r\n//             <p>...</p>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       <div className=\"footer__center\">\r\n//         <ShuffleIcon className=\"footer__green\" />\r\n//         <SkipPreviousIcon onClick={skipNext} className=\"footer__icon\" />\r\n//         {playing ? (\r\n//           <PauseCircleOutlineIcon\r\n//             onClick={handlePlayPause}\r\n//             fontSize=\"large\"\r\n//             className=\"footer__icon\"\r\n//           />\r\n//         ) : (\r\n//           <PlayCircleOutlineIcon\r\n//             onClick={handlePlayPause}\r\n//             fontSize=\"large\"\r\n//             className=\"footer__icon\"\r\n//           />\r\n//         )}\r\n//         <SkipNextIcon onClick={skipPrevious} className=\"footer__icon\" />\r\n//         <RepeatIcon className=\"footer__green\" />\r\n//       </div>\r\n//       <div className=\"footer__right\">\r\n//         <Grid container spacing={2}>\r\n//           <Grid item>\r\n//             <PlaylistPlayIcon />\r\n//           </Grid>\r\n//           <Grid item>\r\n//             <VolumeDownIcon />\r\n//           </Grid>\r\n//           <Grid item xs>\r\n//             <Slider aria-labelledby=\"continuous-slider\" />\r\n//           </Grid>\r\n//         </Grid>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Footer;\r\nimport React from 'react'\r\nimport \"./Footer.css\";\r\n import VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\n import SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\n import SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\n import ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\n import RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport { PlaylistAddOutlined } from '@material-ui/icons';\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\n import { Grid, Slider } from \"@material-ui/core\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n          <div className=\"footer__left\">\r\n          <img  className =\"footer__albumLogo\"src=\"https://i.scdn.co/image/ab67706f00000003dece398a0632752357216a40\" alt=\"\"/>\r\n          <div className=\"footer_songInfo\"/>\r\n          <h4>yeah!</h4>\r\n         <p>_enjoy!</p>\r\n         \r\n          </div>\r\n          <div className=\"footer__center\">\r\n          <ShuffleIcon className=\"footer__green\"/>\r\n          <SkipPreviousIcon className=\"footer__icon\"/>\r\n          <PlayCircleOutlineIcon fontSize=\"large\" className=\"footer__icon\"/>\r\n          <SkipNextIcon className=\"footer_icon\"/>\r\n          <RepeatIcon className=\"footer__green\"/>\r\n          </div>\r\n          <div className=\"footer__right\">\r\n          <Grid container spacing={2}>\r\n           <Grid item>\r\n             <PlaylistPlayIcon />\r\n           </Grid>\r\n           <Grid item>\r\n             <VolumeDownIcon />\r\n           </Grid>\r\n           <Grid item xs>\r\n             <Slider aria-labelledby=\"continuous-slider\" />\r\n           </Grid>\r\n         </Grid>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ option = \"test\", Icon }) {\r\n  return (\r\n    <div className=\"sidebarOption\">\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{option}</h4> : <p>{option}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n","// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n// Replace with your app's client ID, redirect URI and desired scopes\r\nconst clientId = \"b0624eda83c1479c92407ee38fb7255f\";\r\nconst redirectUri = \"http://localhost:3000/\";\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromResponse = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial, item) => {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nexport const accessUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport { getTokenFromResponse } from \"./spotify\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Sidebar() {\r\n  const [{ playlists }, dispatch] = useStateValue();\r\n  console.log(playlists);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        className=\"sidebar__logo\"\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <SidebarOption Icon={HomeIcon} option=\"Home\" />\r\n      <SidebarOption Icon={SearchIcon} option=\"Search\" />\r\n      <SidebarOption Icon={LibraryMusicIcon} option=\"Your Library\" />\r\n      <br />\r\n      <strong className=\"sidebar__title\">PLAYLISTS</strong>\r\n      <hr />\r\n      {playlists?.items?.map((playlist) => (\r\n        <SidebarOption option={playlist.name} />\r\n      ))}\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n\r\n// import React from 'react'\r\n// import \"./Sidebar.css\";\r\n// import SidebarOption from \"./SidebarOption\";\r\n// import HomeIcon from \"@material-ui/icons/Home\";\r\n//  import SearchIcon from \"@material-ui/icons/Search\";\r\n//  import LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\n\r\n// function Sidebar() {\r\n//     return (\r\n//         <div className=\"sidebar\">\r\n//              <img\r\n//         className=\"sidebar__logo\"\r\n//         src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n//         alt=\"\"\r\n//       />\r\n//        <SidebarOption Icon={SearchIcon} option=\"Search\" />\r\n//        <SidebarOption Icon={LibraryMusicIcon} option=\"Your Library\" />\r\n//        <SidebarOption Icon={HomeIcon} option=\"Home\" />\r\n//        <br />\r\n//        <strong className=\"sidebar__title\">PLAYLISTS</strong>\r\n//        <hr />\r\n       \r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Sidebar\r\n","// import React from \"react\";\r\n// import \"./Header.css\";\r\n// import { useStateValue } from \"./StateProvider\";\r\n// import { Avatar } from \"@material-ui/core\";\r\n// import SearchIcon from \"@material-ui/icons/Search\";\r\n// import { useEffect } from \"react\";\r\n\r\n// function Header({ spotify }) {\r\n//   const [{ user }, dispatch] = useStateValue();\r\n\r\n//   return (\r\n//     <div className=\"header\">\r\n//       <div className=\"header__left\">\r\n//         <SearchIcon />\r\n//         <input\r\n//           placeholder=\"Search for Artists, Songs, or Podcasts \"\r\n//           type=\"text\"\r\n//         />\r\n//       </div>\r\n//       <div className=\"header__right\">\r\n//         <Avatar alt={user?.display_name} src={user?.images[0].url} />\r\n//         <h4>{user?.display_name}</h4>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Header;\r\n\r\nimport React from \"react\";\r\nimport \"./Header.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <SearchIcon />\r\n        <input\r\n          placeholder=\"Search for Artists, Songs, or Podcasts \"\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <div className=\"header__right\">\r\n        \r\n        <h4>Aditi</h4>\r\n        <Avatar src =\"\" alt=\"hdkf\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./SongRow.css\";\r\n\r\nfunction SongRow({ track, playSong }) {\r\n  console.log(track);\r\n  return (\r\n    <div className=\"songRow\" onClick={() => playSong(track.id)}>\r\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\r\n      <div className=\"songRow__info\">\r\n        <h1>{track.name}</h1>\r\n        <p>\r\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\r\n          {track.album.name}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongRow;\r\n","import React from \"react\";\r\nimport \"./Body.css\";\r\nimport Header from \"./Header\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport SongRow from \"./SongRow\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nfunction Body({ spotify }) {\r\n  const [{ discover_weekly }, dispatch] = useStateValue();\r\n\r\n  const playPlaylist = (id) => {\r\n    spotify\r\n      .play({\r\n        context_uri: `spotify:playlist:37i9dQZEVXcJZyENOWUFo7`,\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  const playSong = (id) => {\r\n    spotify\r\n      .play({\r\n        uris: [`spotify:track:${id}`],\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n\r\n      <div className=\"body__info\">\r\n        <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n        <div className=\"body__infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>Discover Weekly</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body__songs\">\r\n        <div className=\"body__icons\">\r\n          <PlayCircleFilledIcon\r\n            className=\"body__shuffle\"\r\n            onClick={playPlaylist}\r\n          />\r\n          <FavoriteIcon fontSize=\"large\" />\r\n          <MoreHorizIcon />\r\n        </div>\r\n      <div className=\"bar\">\r\n          <h5># TITLE</h5>\r\n          <br></br>\r\n          <hr></hr>\r\n      </div>\r\n        {discover_weekly?.tracks.items.map((item) => (\r\n          <SongRow playSong={playSong} track={item.track} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n\r\n//37i9dQZF1DWZY9CnWbvq8Q\r\n\r\n\r\n","import React from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport \"./Player.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Body from \"./Body\";\r\n\r\nfunction Player({ spotify }) {\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player__body\">\r\n        \r\n        <Sidebar />\r\n       \r\n        <Body spotify={spotify} />\r\n      </div>\r\n      <Footer />\r\n      {/* <Footer spotify={spotify} /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { accessUrl } from \"./spotify\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <div className=\"login\">\r\n      <img\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n     \r\n      <a href={accessUrl}>LOGIN TO SPOTIFY</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useStateValue } from \"./StateProvider\";\nimport Player from \"./Player\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport \"./App.css\";\nimport Login from \"./Login\";\n\nconst s = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      s.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      s.getPlaylist(\"37i9dQZF1DWZY9CnWbvq8Q\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n\n      s.getMyTopArtists().then((response) =>\n        dispatch({\n          type: \"SET_TOP_ARTISTS\",\n          top_artists: response,\n        })\n      );\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: s,\n      });\n\n      s.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n\n      s.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists,\n        });\n      });\n    }\n  }, [token, dispatch]);\n\n  return (\n    <div className=\"app\">\n      {!token && <Login />}\n      {token && <Player spotify={s} />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { findAllByDisplayValue } from \"@testing-library/react\";\r\n\r\nexport const initialState = {\r\n  user: null,\r\n  playlists: [],\r\n  spotify: null,\r\n  discover_weekly: null,\r\n  top_artists: null,\r\n  playing: false,\r\n  item: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n\r\n    case \"SET_PLAYING\":\r\n      return {\r\n        ...state,\r\n        playing: action.playing,\r\n      };\r\n\r\n    case \"SET_ITEM\":\r\n      return {\r\n        ...state,\r\n        item: action.item,\r\n      };\r\n\r\n    case \"SET_DISCOVER_WEEKLY\":\r\n      return {\r\n        ...state,\r\n        discover_weekly: action.discover_weekly,\r\n      };\r\n\r\n    case \"SET_TOP_ARTISTS\":\r\n      return {\r\n        ...state,\r\n        top_artists: action.top_artists,\r\n      };\r\n\r\n    case \"SET_TOKEN\":\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n\r\n    case \"SET_SPOTIFY\":\r\n      return {\r\n        ...state,\r\n        spotify: action.spotify,\r\n      };\r\n\r\n    case \"SET_PLAYLISTS\":\r\n      return {\r\n        ...state,\r\n        playlists: action.playlists,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}